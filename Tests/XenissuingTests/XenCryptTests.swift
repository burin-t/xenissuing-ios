import XCTest
import CryptoSwift
@testable import Xenissuing

struct TestEncryption: Codable, Hashable {
    let sessionKey: String
    let sessionId: String
    let secret: String
    let iv: String
    let plain: String
}

final class XenCryptTests: XCTestCase {
    // 32 bytes key generated by Xendit
    let xenKey = Data(base64Encoded: "9xoXc4FS2HUuu3nrVUXKnpOhsROomJXxQlVR17x9AuM=")
    func testGenerateSessionId() {
        let xcrypt = XenCrypt(xenditKey: xenKey!)
        let sessionKey = try! xcrypt.generateRandom()
        let sessionId = xcrypt.generateSessionId(sessionKey: sessionKey)
        let iv = sessionId.sealed[0...15]
        let aes = try! AES(key: xenKey!.bytes, blockMode: CBC(iv: iv.bytes), padding: .pkcs7)
        let decryptedBytes = try! aes.decrypt(sessionId.sealed[16...].bytes)
        let decryptedData = Data(decryptedBytes)
        XCTAssertEqual(sessionKey.base64EncodedString(), decryptedData.base64EncodedString())
    }
}
